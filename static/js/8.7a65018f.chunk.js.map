{"version":3,"sources":["assets/img/art.png","assets/img/literature.jpg","assets/img/music.jpg","assets/img/sports.jpg","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","views/AboutPage/Sections/MainSection.js","views/AboutPage/AboutPage.js","assets/jss/material-kit-react/views/hackathonPage.js","assets/img/hackandtech-bg.png"],"names":["module","exports","Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$color","color","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","concat","capitalize","theme","margin","typography","caption","button","overline","srOnly","position","height","width","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","useStyles","makeStyles","styles","ResourceSection","section","GridContainer","justify","GridItem","xs","sm","md","title","description","src","ArtTech","alt","pos","SportTech","LiteratureTech","MusicTech","dashboardRoutes","IntroResourcesPage","rest","Header","routes","brand","rightLinks","HeaderLinks","fixed","changeColorOnScroll","Parallax","small","filter","image","require","container","classNames","mainRaised","Footer","hackathonPageStyle","zIndex","fontSize","fontWeight","marginTop","minHeight","textDecoration","subtitle","maxWidth","background","borderRadius","boxShadow"],"mappings":"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","file":"static/js/8.7a65018f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/art.2a968d35.png\";","module.exports = __webpack_public_path__ + \"static/media/literature.52852966.jpg\";","module.exports = __webpack_public_path__ + \"static/media/music.5bc8305c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sports.bff98c99.jpg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// For Card Component\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// For Images\r\nimport ArtTech from '../../../assets/img/art.png';\r\nimport LiteratureTech from '../../../assets/img/literature.jpg';\r\nimport MusicTech from '../../../assets/img/music.jpg';\r\nimport SportTech from '../../../assets/img/sports.jpg';\r\n\r\n// @material-ui/icons\r\n// import GroupIcon from '@material-ui/icons/Group';\r\n// import AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\n// import EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\r\n// import CodeIcon from '@material-ui/icons/Code';\r\n// core components\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\n// import InfoArea from \"components/InfoArea/InfoArea.js\";\r\n\r\nimport styles from \"assets/jss/material-kit-react/views/landingPageSections/productStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function ResourceSection() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.section}>\r\n      <GridContainer justify=\"center\">\r\n        <GridItem xs={12} sm={12} md={8}>\r\n          <h2 className={classes.title}>Here at &amp;TECH, we believe in changing the world&amp;technology through education&amp;technology.</h2>\r\n          <h5 className={classes.description}>\r\n          We believe that learning the basics of coding, logic, and design are the only things you need to make the world your platform for change and the sky your limit for anything you want to do in life. Here are some of the ways we have been inspired by others in the world, using technology:\r\n          </h5>\r\n        </GridItem>\r\n      </GridContainer>\r\n      <br />\r\n      <GridContainer>\r\n        <GridItem xs={6}>\r\n          <Card className={classes.root}>\r\n            <CardContent>\r\n              <img src={ArtTech} height=\"300px\" alt=\"art\"/>\r\n              <br /><br />\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                art&amp;tech\r\n              </Typography>\r\n              <Typography className={classes.pos} color=\"textSecondary\">\r\n                How can we use technology to create beautiful drawings, paintings, and other graphic designs?\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={6}>\r\n          <Card className={classes.root}>\r\n            <CardContent>\r\n              <img src={SportTech} height=\"300px\" alt=\"sports\"/>\r\n              <br /><br />\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                sports&amp;tech\r\n              </Typography>\r\n              <Typography className={classes.pos} color=\"textSecondary\">\r\n                How can computer programs help predict winners of games, the best possible shot, and more?\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      <br />\r\n      <GridContainer>\r\n        <GridItem xs={6}>\r\n          <Card className={classes.root}>\r\n            <CardContent>\r\n              <img src={LiteratureTech} height=\"300px\" alt=\"literature\"/>\r\n              <br /><br />\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                literature&amp;tech\r\n              </Typography>\r\n              <Typography className={classes.pos} color=\"textSecondary\">\r\n                How can computer code help us analyze what we read, visualize a story, or guess the next word in a sentence?\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={6}>\r\n          <Card className={classes.root}>\r\n            <CardContent>\r\n              <img src={MusicTech} height=\"300px\" alt=\"music\"/>\r\n              <br /><br />\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                music&amp;tech\r\n              </Typography>\r\n              <Typography className={classes.pos} color=\"textSecondary\">\r\n                How can we enhance our ability to listen to music using computers? Can we make new sounds, comopositions, or even instruments\r\n                with computer code?\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      <br />\r\n      <GridContainer justify=\"center\">\r\n        <GridItem xs={12} sm={12} md={8}>\r\n          <h2 className={classes.title}>...and much more!</h2>\r\n          <h5 className={classes.description}>\r\n          Here at &amp;TECH, the possibilities are endless! It is up to your creativity to imagine all the combinations.\r\n          </h5>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport Header from \"components/Header/Header.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\r\nimport Parallax from \"components/Parallax/Parallax.js\";\r\n\r\nimport styles from \"assets/jss/material-kit-react/views/hackathonPage\";\r\n\r\n// Sections for this page\r\nimport ResourceSection from \"./Sections/MainSection.js\";\r\n\r\nconst dashboardRoutes = [];\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function IntroResourcesPage(props) {\r\n  const classes = useStyles();\r\n  const { ...rest } = props;\r\n  return (\r\n    <div>\r\n      <Header\r\n        color=\"transparent\"\r\n        routes={dashboardRoutes}\r\n        brand=\"&amp;TECH\"\r\n        rightLinks={<HeaderLinks />}\r\n        fixed\r\n        changeColorOnScroll={{\r\n          height: 400,\r\n          color: \"white\"\r\n        }}\r\n        {...rest}\r\n      />\r\n      <Parallax small filter image={require(\"assets/img/hackandtech-bg.png\")}>\r\n        <div className={classes.container}>\r\n          <GridContainer justify=\"center\">\r\n            <GridItem xs={12}>\r\n              <h1 className={classes.title}>About</h1>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </div>\r\n      </Parallax>\r\n      <div className={classNames(classes.main, classes.mainRaised)}>\r\n        <div className={classes.container}>\r\n          {/* sections go here */}\r\n          <ResourceSection />\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","import { container } from \"assets/jss/material-kit-react.js\";\r\n\r\nconst hackathonPageStyle = {\r\n  container: {\r\n    zIndex: \"12\",\r\n    color: \"#FFFFFF\",\r\n    textAlign: \"center\",\r\n    ...container\r\n  },\r\n  title: {\r\n    fontSize: \"4.2rem\",\r\n    fontWeight: \"600\",\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    marginTop: \"30px\",\r\n    minHeight: \"32px\",\r\n    color: \"#FFFFFF\",\r\n    textDecoration: \"none\",\r\n    textAlign: \"center\"\r\n  },\r\n  subtitle: {\r\n    fontSize: \"1.313rem\",\r\n    maxWidth: \"500px\",\r\n    margin: \"10px auto 0\"\r\n  },\r\n  main: {\r\n    background: \"#FFFFFF\",\r\n    position: \"relative\",\r\n    zIndex: \"3\"\r\n  },\r\n  mainRaised: {\r\n    margin: \"-60px 30px 0px\",\r\n    borderRadius: \"6px\",\r\n    boxShadow:\r\n      \"0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\r\n  }\r\n};\r\n\r\nexport default hackathonPageStyle;\r\n","module.exports = __webpack_public_path__ + \"static/media/hackandtech-bg.8de9cb22.png\";"],"sourceRoot":""}