{"version":3,"sources":["App.js","index.js"],"names":["Home","lazy","About","Hackathon","IntroResources","AdvancedResources","App","basename","process","fallback","exact","path","component","rootElement","document","getElementById","hasChildNodes","hydrate","render"],"mappings":"gOAWMA,G,YAAOC,gBAAK,kBAAM,+DAClBC,EAAQD,gBAAK,kBAAM,8DACnBE,EAAYF,gBAAK,kBAAM,8DACvBG,EAAiBH,gBAAK,kBAAM,qEAC5BI,EAAoBJ,gBAAK,kBAAM,+DAgBtBK,EAdH,kBACV,kBAAC,IAAD,CAAeC,SAZMC,oBAanB,kBAAC,WAAD,CAAUC,SAAU,6CAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWZ,IACjC,kBAAC,IAAD,CAAOW,KAAK,SAASC,UAAWV,IAChC,kBAAC,IAAD,CAAOS,KAAK,eAAeC,UAAWT,IACtC,kBAAC,IAAD,CAAOQ,KAAK,iBAAiBC,UAAWR,IACxC,kBAAC,IAAD,CAAOO,KAAK,oBAAoBC,UAAWP,QCU7CQ,EAAcC,SAASC,eAAe,QAGxCF,EAAYG,gBACdC,kBAAQ,kBAAC,EAAD,MAASJ,GAEjBK,iBAAO,kBAAC,EAAD,MAASL,K","file":"static/js/main.c44188ca.chunk.js","sourcesContent":["import React, { Suspense, lazy } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n// import logo from '../src/assets/img/andtech-logo.png';\r\nimport './App.css';\r\nimport \"assets/scss/material-kit-react.scss?v=1.9.0\";\r\n\r\nconst { PUBLIC_URL } = process.env;\r\n\r\n// Every route - we lazy load so that each page can be chunked\r\n// NOTE that some of these chunks are very small. We should optimize\r\n// which pages are lazy loaded in the future.\r\nconst Home = lazy(() => import('./views/LandingPage/LandingPage'));\r\nconst About = lazy(() => import('./views/AboutPage/AboutPage'));\r\nconst Hackathon = lazy(() => import('./views/HackathonPage/HackathonPage'));\r\nconst IntroResources = lazy(() => import('./views/IntroResourcesPage/IntroResourcesPage'));\r\nconst AdvancedResources = lazy(() => import('./views/AdvancedResourcesPage/AdvancedResourcesPage'));\r\n\r\nconst App = () => (\r\n  <BrowserRouter basename={PUBLIC_URL}>\r\n    <Suspense fallback={<div>Loading... </div>}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/about\" component={About} />\r\n        <Route path=\"/hackandtech\" component={Hackathon} />\r\n        <Route path=\"/introstarters\" component={IntroResources} />\r\n        <Route path=\"/advancedstarters\" component={AdvancedResources} />\r\n      </Switch>\r\n    </Suspense>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { hydrate, render } from 'react-dom';\r\nimport App from './App';\r\n// import ReactDOM from \"react-dom\";\r\n// import { createBrowserHistory } from \"history\";\r\n// import { Router, Route, Switch } from \"react-router-dom\";\r\n\r\n// import \"assets/scss/material-kit-react.scss?v=1.9.0\";\r\n\r\n// pages for this product\r\n// import LandingPage from \"views/LandingPage/LandingPage.js\";\r\n// import ProfilePage from \"views/ProfilePage/ProfilePage.js\";\r\n// import LoginPage from \"views/LoginPage/LoginPage.js\";\r\n// import HackathonPage from \"views/HackathonPage/HackathonPage.js\";\r\n// import IntroResourcesPage from \"views/IntroResourcesPage/IntroResourcesPage.js\";\r\n// import AdvancedResourcesPage from \"views/AdvancedResourcesPage/AdvancedResourcesPage.js\";\r\n// import AboutPage from \"views/AboutPage/AboutPage.js\";\r\n\r\n// var hist = createBrowserHistory();\r\n\r\n// ReactDOM.render(\r\n//   <Router history={hist}>\r\n//     <Switch>\r\n//       <Route path=\"/profile-page\" component={ProfilePage} />\r\n//       <Route path=\"/login-page\" component={LoginPage} />\r\n//       <Route path=\"/hackandtech\" component={HackathonPage} />\r\n//       <Route path=\"/introstarters\" component={IntroResourcesPage} />\r\n//       <Route path=\"/advancedstarters\" component={AdvancedResourcesPage} />\r\n//       <Route path=\"/about\" component={AboutPage} />\r\n//       <Route path=\"/\" component={LandingPage} />\r\n//     </Switch>\r\n//   </Router>,\r\n//   document.getElementById(\"root\")\r\n// );\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\n// hydrate is required by react-snap.\r\nif (rootElement.hasChildNodes()) {\r\n  hydrate(<App />, rootElement);\r\n} else {\r\n  render(<App />, rootElement);\r\n}\r\n"],"sourceRoot":""}